[
  {
    "objectID": "slides/01-introduction.html#welcome",
    "href": "slides/01-introduction.html#welcome",
    "title": "1 - Introduction",
    "section": "Welcome!",
    "text": "Welcome!\n\n\nThere are gender-neutral bathrooms located on levels 3, 4, 5, 6, & 7\nA meditation/prayer room is available in room 503\n\nOpen Monday & Tuesday 7am - 7pm, Wednesday 7am - 5pm\n\nA lactation room is available in room 509\n\nOpen Monday & Tuesday 7am - 7pm, Wednesday 7am - 5pm\n\nParticipants who do not wish to be photographed have red lanyards; please note everyone‚Äôs lanyard colors before taking a photo and respect their choices\nThe Code of Conduct can be found at https://posit.co/code-of-conduct/\n\nPlease review them carefully! ‚ù§Ô∏è\nYou can report Code of Conduct violations in person, by email, or by phone; see the policy linked above for contact information"
  },
  {
    "objectID": "slides/01-introduction.html#who-are-you",
    "href": "slides/01-introduction.html#who-are-you",
    "title": "1 - Introduction",
    "section": "Who are you?",
    "text": "Who are you?\n\nYou have intermediate R or Python knowledge\nYou can read data from CSV and other flat files, transform and reshape data, and make a wide variety of graphs\nYou can fit a model to data with your modeling framework of choice wide variety of graphs\nYou have exposure to basic modeling and machine learning practice\nYou do not need expert familiarity with advanced ML or MLOps topics"
  },
  {
    "objectID": "slides/01-introduction.html#who-are-we",
    "href": "slides/01-introduction.html#who-are-we",
    "title": "1 - Introduction",
    "section": "Who are we?",
    "text": "Who are we?\n\n\n\n\n\n @isabelizimm\n @isabelizimm@fosstodon.org\n isabelizimm.me\n\n\n\n\n @juliasilge\n @juliasilge@fosstodon.org\n youtube.com/juliasilge\n juliasilge.com"
  },
  {
    "objectID": "slides/01-introduction.html#plan-for-this-workshop",
    "href": "slides/01-introduction.html#plan-for-this-workshop",
    "title": "1 - Introduction",
    "section": "Plan for this workshop",
    "text": "Plan for this workshop\n\nVersioning\n\nManaging change in models ‚úÖ\n\nDeploying\n\nPutting models in REST APIs üéØ\n\nMonitoring\n\nTracking model performance üëÄ"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-machine-learning",
    "href": "slides/01-introduction.html#what-is-machine-learning",
    "title": "1 - Introduction",
    "section": "What is machine learning?",
    "text": "What is machine learning?\n\n\nIllustration credit: https://vas3k.com/blog/machine_learning/"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-machine-learning-1",
    "href": "slides/01-introduction.html#what-is-machine-learning-1",
    "title": "1 - Introduction",
    "section": "What is machine learning?",
    "text": "What is machine learning?\n\n\nIllustration credit: Chapter 1 of Tidy Modeling with R"
  },
  {
    "objectID": "slides/01-introduction.html#mlops-is",
    "href": "slides/01-introduction.html#mlops-is",
    "title": "1 - Introduction",
    "section": "MLOps is‚Ä¶",
    "text": "MLOps is‚Ä¶"
  },
  {
    "objectID": "slides/01-introduction.html#mlops-is-1",
    "href": "slides/01-introduction.html#mlops-is-1",
    "title": "1 - Introduction",
    "section": "MLOps is‚Ä¶",
    "text": "MLOps is‚Ä¶\na set of practices to deploy and maintain machine learning models in production reliably and efficiently"
  },
  {
    "objectID": "slides/01-introduction.html#mlops-with-vetiver",
    "href": "slides/01-introduction.html#mlops-with-vetiver",
    "title": "1 - Introduction",
    "section": "MLOps with vetiver",
    "text": "MLOps with vetiver\n\nVetiver, the oil of tranquility, is used as a stabilizing ingredient in perfumery to preserve more volatile fragrances."
  },
  {
    "objectID": "slides/01-introduction.html#your-turn",
    "href": "slides/01-introduction.html#your-turn",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\n\nActivity\n\n\nWhat language does your team use for machine learning?\nWhat kinds of models do you commonly use?\nHave you ever deployed a model?\n\n\n\n\n\n\n‚àí+\n03:00"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-1",
    "href": "slides/01-introduction.html#your-turn-1",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nLog in to Posit Workbench at https://vetiver.posit.team\nStart a new session, either RStudio or VS Code.\nWe recommend that you open the vetiver directory as a project (RStudio) or workspace (VS Code).\nIn your new session, open the folder class-work in the vetiver directory, and choose the first Quarto file!\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/01-introduction.html#seattle-housing-data",
    "href": "slides/01-introduction.html#seattle-housing-data",
    "title": "1 - Introduction",
    "section": "Seattle housing data",
    "text": "Seattle housing data\n\n\nHome sale prices for King County, including Seattle, between May 2014 and May 2015\nCan certain measurements be used to predict the sale price?\nData from Kaggle by way of mlr3data::kc_housing"
  },
  {
    "objectID": "slides/01-introduction.html#seattle-housing-data-1",
    "href": "slides/01-introduction.html#seattle-housing-data-1",
    "title": "1 - Introduction",
    "section": "Seattle housing data",
    "text": "Seattle housing data\n\nN = 14633\nA numeric outcome, price\nOther variables to use for prediction:\n\nbedrooms, bathrooms, sqft_living, and yr_built are numeric predictors\nwaterfront could be a logical (or maybe nominal) predictor\ndate could be a date predictor\n\n\n\nR\n\nlibrary(arrow)\npath &lt;- here::here(\"data\", \"housing.parquet\")\nhousing &lt;- read_parquet(path)\n\nPython\n\nimport pandas as pd\nhousing = pd.read_parquet('../data/housing.parquet')"
  },
  {
    "objectID": "slides/01-introduction.html#home-prices-in-seattle",
    "href": "slides/01-introduction.html#home-prices-in-seattle",
    "title": "1 - Introduction",
    "section": "Home prices in Seattle",
    "text": "Home prices in Seattle\n\n\n\n\n\n\n\n\nprice\ndate\nbedrooms\nbathrooms\nsqft_living\nyr_built\nwaterfront\nlat\nlong\n\n\n\n\n845000\n2014-06-12\n4\n2.75\n4070\n2002\nFALSE\n47.4843\n-121.752\n\n\n589000\n2014-06-12\n3\n2.00\n2250\n1925\nFALSE\n47.5737\n-122.409\n\n\n880000\n2014-05-25\n3\n2.00\n2130\n1989\nFALSE\n47.7489\n-122.123\n\n\n370000\n2014-05-21\n4\n2.75\n3150\n1965\nFALSE\n47.3382\n-122.196\n\n\n412000\n2014-07-07\n3\n1.75\n1880\n1945\nFALSE\n47.5354\n-122.378\n\n\n1150000\n2014-09-28\n3\n2.25\n3250\n2006\nFALSE\n47.6077\n-122.158\n\n\n733500\n2014-12-09\n3\n1.50\n2120\n1904\nFALSE\n47.6060\n-122.307\n\n\n218000\n2014-11-19\n3\n2.25\n1610\n1968\nFALSE\n47.3146\n-122.384\n\n\n179000\n2014-07-28\n4\n1.75\n1790\n1900\nFALSE\n47.4963\n-122.318\n\n\n660000\n2014-11-30\n4\n1.50\n1960\n1922\nFALSE\n47.6797\n-122.359\n\n\n980000\n2014-06-08\n4\n2.50\n2730\n1909\nFALSE\n47.6420\n-122.358\n\n\n350000\n2014-06-25\n3\n2.25\n1780\n1987\nFALSE\n47.4622\n-122.127\n\n\n595000\n2014-12-03\n2\n2.00\n1510\n1900\nFALSE\n47.6582\n-122.345\n\n\n950000\n2014-05-22\n5\n3.25\n3400\n1999\nFALSE\n47.6141\n-122.136\n\n\n490000\n2014-08-26\n3\n2.25\n2550\n1989\nFALSE\n47.7711\n-122.195"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-2",
    "href": "slides/01-introduction.html#your-turn-2",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nExplore the housing data on your own!\n\n\nWhat‚Äôs the distribution of the outcome price?\nWhat‚Äôs the distribution of the numeric variable sqft_living?\nHow do results differ across the waterfront category?\n\n\nShare something you noticed with your neighbor.\n\n\n\n\n\n\n‚àí+\n08:00\n\n\n\n\nMake a plot or summary and then share with neighbor"
  },
  {
    "objectID": "slides/01-introduction.html#section-3",
    "href": "slides/01-introduction.html#section-3",
    "title": "1 - Introduction",
    "section": "",
    "text": "library(tidyverse)\nhousing |&gt;\n  group_by(date = floor_date(date, unit = \"week\")) |&gt;\n  summarise(price = mean(price)) |&gt;\n  ggplot(aes(date, price)) +\n  geom_line(alpha = 0.8, linewidth = 1.5) +\n  scale_y_continuous(labels = scales::dollar) +\n  labs(y = \"Mean price\", x = NULL)"
  },
  {
    "objectID": "slides/01-introduction.html#section-4",
    "href": "slides/01-introduction.html#section-4",
    "title": "1 - Introduction",
    "section": "",
    "text": "from plotnine import ggplot, aes, geom_boxplot, coord_flip, scale_y_log10\n(ggplot(housing, aes('waterfront', 'price', fill = 'waterfront')) \n  + geom_boxplot(alpha = 0.5, show_legend = False)\n  + coord_flip()\n  + scale_y_log10()\n)\n#&gt; &lt;Figure Size: (640 x 480)&gt;"
  },
  {
    "objectID": "slides/01-introduction.html#section-5",
    "href": "slides/01-introduction.html#section-5",
    "title": "1 - Introduction",
    "section": "",
    "text": "housing |&gt;\n  ggplot(aes(long, lat, z = log10(price))) +\n  stat_summary_hex(alpha = 0.7) +\n  scale_fill_viridis_c() +\n  labs(fill = \"Mean price\\n(log10)\", x = NULL, y = NULL)"
  },
  {
    "objectID": "slides/01-introduction.html#time-for-building-a-model",
    "href": "slides/01-introduction.html#time-for-building-a-model",
    "title": "1 - Introduction",
    "section": "Time for building a model!",
    "text": "Time for building a model!"
  },
  {
    "objectID": "slides/01-introduction.html#spend-your-data-budget",
    "href": "slides/01-introduction.html#spend-your-data-budget",
    "title": "1 - Introduction",
    "section": "Spend your data budget",
    "text": "Spend your data budget\nR\n\nlibrary(tidymodels)\nset.seed(123)\nhousing_split &lt;- housing |&gt;\n  mutate(price = log10(price)) |&gt; \n  initial_split(prop = 0.8)\nhousing_train &lt;- training(housing_split)\nhousing_test &lt;- testing(housing_split)\n\nPython\n\nfrom sklearn import model_selection\nimport numpy as np\nnp.random.seed(123)\nX, y = housing[[\"bedrooms\", \"bathrooms\", \"sqft_living\", \"yr_built\"]], np.log10(housing[\"price\"])\nX_train, X_test, y_train, y_test = model_selection.train_test_split(\n    X, y,\n    test_size = 0.2\n)"
  },
  {
    "objectID": "slides/01-introduction.html#fit-a-linear-regression-model",
    "href": "slides/01-introduction.html#fit-a-linear-regression-model",
    "title": "1 - Introduction",
    "section": "Fit a linear regression model üöÄ",
    "text": "Fit a linear regression model üöÄ\nOr your model of choice!\n\nRPython\n\n\n\nhousing_fit &lt;-\n  workflow(\n    price ~ bedrooms + bathrooms + sqft_living + yr_built, \n    linear_reg()\n    ) |&gt; \n  fit(data = housing_train)\n\n\n\n\nfrom sklearn import linear_model\nhousing_fit = linear_model.LinearRegression().fit(X_train, y_train)"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-3",
    "href": "slides/01-introduction.html#your-turn-3",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nSplit your data in training and testing.\nFit a model to your training data.\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/01-introduction.html#create-a-deployable-model-object",
    "href": "slides/01-introduction.html#create-a-deployable-model-object",
    "title": "1 - Introduction",
    "section": "Create a deployable model object",
    "text": "Create a deployable model object\nR\n\nlibrary(vetiver)\nv &lt;- vetiver_model(housing_fit, \"seattle-housing-rstats\")\nv\n#&gt; \n#&gt; ‚îÄ‚îÄ seattle-housing-rstats ‚îÄ &lt;bundled_workflow&gt; model for deployment \n#&gt; A lm regression modeling workflow using 4 features\n\nPython\n\nfrom vetiver import VetiverModel\nv = VetiverModel(housing_fit, \"seattle-housing-python\", prototype_data = X_train)\nv.description\n#&gt; 'A scikit-learn LinearRegression model'"
  },
  {
    "objectID": "slides/01-introduction.html#deploy-preprocessors-and-models-together",
    "href": "slides/01-introduction.html#deploy-preprocessors-and-models-together",
    "title": "1 - Introduction",
    "section": "Deploy preprocessors and models together",
    "text": "Deploy preprocessors and models together"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-wrong-with-this",
    "href": "slides/01-introduction.html#what-is-wrong-with-this",
    "title": "1 - Introduction",
    "section": "What is wrong with this?",
    "text": "What is wrong with this?"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-4",
    "href": "slides/01-introduction.html#your-turn-4",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate your vetiver model object.\nCheck out the default description that is created, and try out using a custom description.\nShow your custom description to your neighbor.\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/01-introduction.html#pins",
    "href": "slides/01-introduction.html#pins",
    "title": "1 - Introduction",
    "section": "pins üìå",
    "text": "pins üìå\nThe pins package publishes data, models, and other R and Python objects, making it easy to share them across projects and with your colleagues.\n\n\n\n\n\n\n\nYou can pin objects to a variety of pin boards, including:\n\n\n\n\na local folder (like a network drive or even a temporary directory)\nPosit Connect\nAmazon S3\nAzure Storage\nGoogle Cloud"
  },
  {
    "objectID": "slides/01-introduction.html#version-your-model-1",
    "href": "slides/01-introduction.html#version-your-model-1",
    "title": "1 - Introduction",
    "section": "Version your model",
    "text": "Version your model\nLearn about the pins package for Python and for R\n\nPythonR\n\n\n\nfrom pins import board_temp\nfrom vetiver import vetiver_pin_write\n\nboard = board_temp(allow_pickle_read = True)\nvetiver_pin_write(board, v)\n#&gt; Model Cards provide a framework for transparent, responsible reporting. \n#&gt;  Use the vetiver `.qmd` Quarto template as a place to start, \n#&gt;  with vetiver.model_card()\n#&gt; Writing pin:\n#&gt; Name: 'seattle-housing-python'\n#&gt; Version: 20240810T225627Z-258d7\n\n\n\n\nlibrary(pins)\n\nboard &lt;- board_temp()\nboard |&gt; vetiver_pin_write(v)\n#&gt; Creating new version '20240810T225628Z-f27f6'\n#&gt; Writing to pin 'seattle-housing-rstats'\n#&gt; \n#&gt; Create a Model Card for your published model\n#&gt; ‚Ä¢ Model Cards provide a framework for transparent, responsible reporting\n#&gt; ‚Ä¢ Use the vetiver `.Rmd` template as a place to start"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-5",
    "href": "slides/01-introduction.html#your-turn-5",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nPin your vetiver model object to a temporary board.\nRetrieve the model metadata with pin_meta().\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/01-introduction.html#version-your-model-2",
    "href": "slides/01-introduction.html#version-your-model-2",
    "title": "1 - Introduction",
    "section": "Version your model",
    "text": "Version your model\nR\n\nlibrary(pins)\nlibrary(vetiver)\nboard &lt;- board_temp()\nv &lt;- vetiver_model(housing_fit, \"seattle-housing-rstats\")\nboard |&gt; vetiver_pin_write(v)\n\nPython\n\nfrom pins import board_temp\nfrom vetiver import VetiverModel, vetiver_pin_write\n\nboard = board_temp(allow_pickle_read = True)\nv = VetiverModel(housing_fit, \"seattle-housing-python\", prototype_data = X_train)\nvetiver_pin_write(board, v)"
  },
  {
    "objectID": "slides/01-introduction.html#version-your-model-3",
    "href": "slides/01-introduction.html#version-your-model-3",
    "title": "1 - Introduction",
    "section": "Version your model",
    "text": "Version your model\nR\n\nlibrary(pins)\nlibrary(vetiver)\n\nboard &lt;- board_connect()\nv &lt;- vetiver_model(housing_fit, \"julia.silge/seattle-housing-rstats\")\nboard |&gt; vetiver_pin_write(v)\n\nPython\n\nfrom pins import board_connect\nfrom vetiver import VetiverModel, vetiver_pin_write\nfrom dotenv import load_dotenv\nload_dotenv()\n\nboard = board_connect(allow_pickle_read = True)\nv = VetiverModel(housing_fit, \"isabel.zimmerman/seattle-housing-python\", prototype_data = X_train)\nvetiver_pin_write(board, v)"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn-6",
    "href": "slides/01-introduction.html#your-turn-6",
    "title": "1 - Introduction",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nEither:\n\n\nSet up Connect publishing from RStudio.\nCreate an API key for your Posit Connect server, and save it on Workbench in your working directory (in .Renviron for R or .env for Python).\n\n\nCreate a new vetiver model object that includes your username, and pin this vetiver model to your Connect instance.\nVisit your pin‚Äôs homepage on Connect.\nTrain your model again, using a different ML algorithm (decision tree or random forest are good options).\nWrite this new version of your model to the same pin, and see what versions you have with pin_versions.\n\n\n\n\n\n\n‚àí+\n10:00\n\n\n\n\n\n\nhttps://posit-conf-2024.github.io/vetiver"
  },
  {
    "objectID": "slides/02-deploy.html#plan-for-this-workshop",
    "href": "slides/02-deploy.html#plan-for-this-workshop",
    "title": "2 - Deploy your model",
    "section": "Plan for this workshop",
    "text": "Plan for this workshop\n\n\nVersioning\n\nManaging change in models ‚úÖ\n\nDeploying\n\nPutting models in REST APIs üéØ\n\nMonitoring\n\nTracking model performance üëÄ"
  },
  {
    "objectID": "slides/02-deploy.html#fit-a-random-forest",
    "href": "slides/02-deploy.html#fit-a-random-forest",
    "title": "2 - Deploy your model",
    "section": "Fit a random forest üå≥üå¥üå≤üå≤üå¥üå≥üå¥üå≥üå≤",
    "text": "Fit a random forest üå≥üå¥üå≤üå≤üå¥üå≥üå¥üå≥üå≤\n\nRPython\n\n\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(arrow)\nset.seed(123)\n\npath &lt;- here::here(\"data\", \"housing.parquet\")\nhousing &lt;- read_parquet(path)\n\nset.seed(123)\nhousing_split &lt;- housing |&gt;\n  mutate(price = log10(price)) |&gt;\n  initial_split(prop = 0.8)\nhousing_train &lt;- training(housing_split)\nhousing_test &lt;- testing(housing_split)\n\nhousing_fit &lt;-\n  workflow(\n    price ~ bedrooms + bathrooms + sqft_living + yr_built,\n    rand_forest(trees = 200, mode = \"regression\")\n    ) |&gt;\n  fit(data = housing_train)\n\n\n\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing, ensemble, pipeline, compose, model_selection\n\nhousing = pd.read_parquet(\"../data/housing.parquet\", engine=\"pyarrow\")\n\nX, y = housing[[\"bedrooms\", \"bathrooms\", \"sqft_living\", \"yr_built\"]], np.log10(housing[\"price\"])\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.2)\n\nhousing_fit = ensemble.RandomForestRegressor(n_estimators=200).fit(X_train, y_train)"
  },
  {
    "objectID": "slides/02-deploy.html#create-your-vetiver-model-and-version",
    "href": "slides/02-deploy.html#create-your-vetiver-model-and-version",
    "title": "2 - Deploy your model",
    "section": "Create your vetiver model and version",
    "text": "Create your vetiver model and version\nR\n\nlibrary(vetiver)\nlibrary(pins)\n\nv &lt;- vetiver_model(housing_fit, \"user.name/seattle-housing-rstats\")\nboard &lt;- board_connect()\nboard |&gt; vetiver_pin_write(v)\n\nPython\n\nfrom vetiver import VetiverModel, vetiver_pin_write\nfrom pins import board_connect\nfrom dotenv import load_dotenv\nload_dotenv()\n\nv = VetiverModel(housing_fit, \"user.name/seattle-housing-python\", prototype_data = X_train)\nboard = board_connect(allow_pickle_read = True)\nvetiver_pin_write(board, v)"
  },
  {
    "objectID": "slides/02-deploy.html#make-it-easy-to-do-the-right-thing",
    "href": "slides/02-deploy.html#make-it-easy-to-do-the-right-thing",
    "title": "2 - Deploy your model",
    "section": "Make it easy to do the right thing",
    "text": "Make it easy to do the right thing\n\nRobust and human-friendly checking of new data\nTrack and document software dependencies of models\nModel cards for transparent, responsible reporting"
  },
  {
    "objectID": "slides/02-deploy.html#make-it-easy-to-do-the-right-thing-1",
    "href": "slides/02-deploy.html#make-it-easy-to-do-the-right-thing-1",
    "title": "2 - Deploy your model",
    "section": "Make it easy to do the right thing",
    "text": "Make it easy to do the right thing"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn",
    "href": "slides/02-deploy.html#your-turn",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nOpen the Model Card template, and spend a few minutes exploring how you might create a Model Card for this inspection model.\nDiscuss something you notice about the Model Card with your neighbor.\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/02-deploy.html#you-can-deploy-your-model-as-a",
    "href": "slides/02-deploy.html#you-can-deploy-your-model-as-a",
    "title": "2 - Deploy your model",
    "section": "You can deploy your model as a‚Ä¶",
    "text": "You can deploy your model as a‚Ä¶\n\n\nREST API"
  },
  {
    "objectID": "slides/02-deploy.html#what-is-a-rest-api",
    "href": "slides/02-deploy.html#what-is-a-rest-api",
    "title": "2 - Deploy your model",
    "section": "What is a REST API?",
    "text": "What is a REST API?\n\nAn interface that can connect applications in a standard way"
  },
  {
    "objectID": "slides/02-deploy.html#create-a-vetiver-rest-api",
    "href": "slides/02-deploy.html#create-a-vetiver-rest-api",
    "title": "2 - Deploy your model",
    "section": "Create a vetiver REST API",
    "text": "Create a vetiver REST API\nR\n\nlibrary(plumber)\n\npr() |&gt;\n  vetiver_api(v) |&gt;\n  pr_run()\n\nPython\n\napi = VetiverAPI(v)\napi.run()"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-1",
    "href": "slides/02-deploy.html#your-turn-1",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a vetiver API for your model and run it locally.\nExplore the visual documentation.\nHow many endpoints are there?\nDiscuss what you notice with your neighbor.\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/02-deploy.html#what-does-deploy-mean",
    "href": "slides/02-deploy.html#what-does-deploy-mean",
    "title": "2 - Deploy your model",
    "section": "What does ‚Äúdeploy‚Äù mean?",
    "text": "What does ‚Äúdeploy‚Äù mean?"
  },
  {
    "objectID": "slides/02-deploy.html#what-does-deploy-mean-1",
    "href": "slides/02-deploy.html#what-does-deploy-mean-1",
    "title": "2 - Deploy your model",
    "section": "What does ‚Äúdeploy‚Äù mean?",
    "text": "What does ‚Äúdeploy‚Äù mean?"
  },
  {
    "objectID": "slides/02-deploy.html#deploy-to-posit-connect",
    "href": "slides/02-deploy.html#deploy-to-posit-connect",
    "title": "2 - Deploy your model",
    "section": "Deploy to Posit Connect",
    "text": "Deploy to Posit Connect\nR\n\nvetiver_deploy_rsconnect(board, \"user.name/seattle-housing-rstats\")\n\nPython\n\nfrom rsconnect.api import RSConnectServer\n\nconnect_server = RSConnectServer(url = rsc_url, api_key = api_key)\nboard = pins.board_connect(allow_pickle_read = True)\n\nvetiver.deploy_rsconnect(\n    connect_server = connect_server,\n    board = board,\n    pin_name = \"user.name/seattle-housing-python\",\n)"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-2",
    "href": "slides/02-deploy.html#your-turn-2",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nDeploy your model to your Posit Connect server.\nGive your API a vanity URL.\nSet your API as accessible to ‚ÄúAnyone‚Äù, for convenience.\nCompare the results to your local API. Is anything different?\nIf you visit Connect, do you see your neighbor‚Äôs API?\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/02-deploy.html#section-1",
    "href": "slides/02-deploy.html#section-1",
    "title": "2 - Deploy your model",
    "section": "",
    "text": "You did it! ü•≥"
  },
  {
    "objectID": "slides/02-deploy.html#how-do-you-make-a-request-of-your-new-api",
    "href": "slides/02-deploy.html#how-do-you-make-a-request-of-your-new-api",
    "title": "2 - Deploy your model",
    "section": "How do you make a request of your new API?",
    "text": "How do you make a request of your new API?\n\nRPython\n\n\n\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/metadata\"\nr &lt;- httr::GET(url)\nmetadata &lt;- httr::content(r, as = \"text\", encoding = \"UTF-8\")\njsonlite::fromJSON(metadata)\n#&gt; $user\n#&gt; list()\n#&gt; \n#&gt; $version\n#&gt; [1] \"356\"\n#&gt; \n#&gt; $url\n#&gt; [1] \"https://pub.demo.posit.team/content/af63b874-734d-4f31-af4a-7afe3ee319ba/_rev356/\"\n#&gt; \n#&gt; $required_pkgs\n#&gt; [1] \"parsnip\"   \"ranger\"    \"workflows\"\n\n\n\n\nimport requests\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/metadata\" \nprint(requests.get(url).content)\n#&gt; b'{\"user\":{},\"version\":\"362\",\"url\":\"https://pub.demo.posit.team/content/7189ede9-7720-47f1-a783-0e3ed835a7f0/\",\"required_pkgs\":[\"scikit-learn\"],\"python_version\":[3,12,4,\"final\",0]}'"
  },
  {
    "objectID": "slides/02-deploy.html#how-do-you-make-a-request-of-your-new-api-1",
    "href": "slides/02-deploy.html#how-do-you-make-a-request-of-your-new-api-1",
    "title": "2 - Deploy your model",
    "section": "How do you make a request of your new API?",
    "text": "How do you make a request of your new API?\n\nPython or R packages like requests or httr (or httr2!)\ncurl\nThere is special support in vetiver for the /predict endpoint"
  },
  {
    "objectID": "slides/02-deploy.html#create-a-vetiver-endpoint",
    "href": "slides/02-deploy.html#create-a-vetiver-endpoint",
    "title": "2 - Deploy your model",
    "section": "Create a vetiver endpoint",
    "text": "Create a vetiver endpoint\nYou can treat your model API much like it is a local model in memory!\n\nRPython\n\n\n\nlibrary(vetiver)\n\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/predict\"\nendpoint &lt;- vetiver_endpoint(url)\npredict(endpoint, slice_sample(housing_test, n = 5))\n#&gt; # A tibble: 5 √ó 1\n#&gt;   .pred\n#&gt;   &lt;dbl&gt;\n#&gt; 1  5.89\n#&gt; 2  5.60\n#&gt; 3  5.38\n#&gt; 4  6.16\n#&gt; 5  5.56\n\n\n\n\nfrom vetiver.server import predict, vetiver_endpoint\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/predict\"\nendpoint = vetiver_endpoint(url)\npredict(endpoint = endpoint, data = X_test.head(5))\n#&gt;     predict\n#&gt; 0  5.732772\n#&gt; 1  5.435476\n#&gt; 2  5.398204\n#&gt; 3  5.611807\n#&gt; 4  5.798544"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-3",
    "href": "slides/02-deploy.html#your-turn-3",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a vetiver endpoint object for your API.\nPredict with your endpoint for new data.\nOptional: call another endpoint like /ping or /metadata.\n\n\n\n\n\n\n‚àí+\n10:00"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-4",
    "href": "slides/02-deploy.html#your-turn-4",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a vetiver endpoint object for your neighbor‚Äôs API.\nPredict with your endpoint for new data.\nYou get extra credit if your neighbor‚Äôs model is in a different language than yours!\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/02-deploy.html#create-a-vetiver-endpoint-1",
    "href": "slides/02-deploy.html#create-a-vetiver-endpoint-1",
    "title": "2 - Deploy your model",
    "section": "Create a vetiver endpoint",
    "text": "Create a vetiver endpoint\nWhat if your model API requires authentication?\nR\nlibrary(vetiver)\n\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/predict\"\nendpoint &lt;- vetiver_endpoint(url)\npredict(endpoint, slice_sample(housing_test, n = 10))\nPython\nfrom vetiver.server import predict, vetiver_endpoint\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/predict\"\nendpoint = vetiver_endpoint(url)\npredict(endpoint = endpoint, data = housing_test)"
  },
  {
    "objectID": "slides/02-deploy.html#create-a-vetiver-endpoint-2",
    "href": "slides/02-deploy.html#create-a-vetiver-endpoint-2",
    "title": "2 - Deploy your model",
    "section": "Create a vetiver endpoint",
    "text": "Create a vetiver endpoint\nWhat if your model API requires authentication?\nR\nlibrary(vetiver)\n\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/predict\"\nendpoint &lt;- vetiver_endpoint(url)\napiKey &lt;- Sys.getenv(\"CONNECT_API_KEY\")\npredict(endpoint, slice_sample(inspect_test, n = 10), \n        httr::add_headers(Authorization = paste(\"Key\", apiKey)))\nPython\nfrom vetiver.server import predict, vetiver_endpoint\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/predict\"\nendpoint = vetiver_endpoint(url)\nh = { 'Authorization': f'Key {api_key}' }\npredict(endpoint = endpoint, data = X_test, headers = h)"
  },
  {
    "objectID": "slides/02-deploy.html#model-input-prototype-1",
    "href": "slides/02-deploy.html#model-input-prototype-1",
    "title": "2 - Deploy your model",
    "section": "Model input prototype",
    "text": "Model input prototype\nWhat are the inputs to your model?\n\nRPython\n\n\n\nglimpse(housing_train)\n#&gt; Rows: 11,706\n#&gt; Columns: 9\n#&gt; $ price       &lt;dbl&gt; 5.569374, 5.676694, 5.440909, 5.597695, 5.491362, 5.712229‚Ä¶\n#&gt; $ date        &lt;date&gt; 2014-06-10, 2014-06-10, 2014-10-08, 2014-09-10, 2014-11-1‚Ä¶\n#&gt; $ bedrooms    &lt;int&gt; 3, 3, 2, 5, 3, 4, 3, 3, 5, 5, 2, 3, 3, 4, 4, 3, 4, 3, 4, 4‚Ä¶\n#&gt; $ bathrooms   &lt;dbl&gt; 1.00, 2.25, 1.00, 2.75, 1.50, 2.50, 1.50, 1.75, 3.00, 2.25‚Ä¶\n#&gt; $ sqft_living &lt;int&gt; 890, 1630, 870, 2840, 1140, 2920, 1320, 1400, 3190, 2710, ‚Ä¶\n#&gt; $ yr_built    &lt;int&gt; 1951, 2005, 2004, 1960, 1988, 2003, 1970, 1925, 2013, 1955‚Ä¶\n#&gt; $ waterfront  &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FA‚Ä¶\n#&gt; $ lat         &lt;dbl&gt; 47.7100, 47.5493, 47.5702, 47.7618, 47.5701, 47.7351, 47.5‚Ä¶\n#&gt; $ long        &lt;dbl&gt; -122.286, -121.998, -122.287, -122.253, -122.017, -121.975‚Ä¶\n\n\n\n\nX_train\n#&gt;        bedrooms  bathrooms  sqft_living  yr_built\n#&gt; 9043          3       1.50         2040      1950\n#&gt; 12853         2       1.00          720      1943\n#&gt; 7072          4       2.50         2267      2014\n#&gt; 2122          4       3.50         3500      1994\n#&gt; 1490          4       2.50         1630      2003\n#&gt; ...         ...        ...          ...       ...\n#&gt; 8597          4       1.75         3080      1941\n#&gt; 4030          3       1.75         1860      1959\n#&gt; 11484         3       1.75         1590      1980\n#&gt; 9062          3       1.00          960      1963\n#&gt; 9292          3       2.00         1220      1947\n#&gt; \n#&gt; [11706 rows x 4 columns]"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-5",
    "href": "slides/02-deploy.html#your-turn-5",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCall the prototype endpoints for both the Python and R model.\nHow do they compare?\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/02-deploy.html#model-input-prototype-2",
    "href": "slides/02-deploy.html#model-input-prototype-2",
    "title": "2 - Deploy your model",
    "section": "Model input prototype",
    "text": "Model input prototype\n\nRPython\n\n\n\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/prototype\"\nr &lt;- httr::GET(url)\nprototype &lt;- httr::content(r, as = \"text\", encoding = \"UTF-8\")\njsonlite::fromJSON(prototype)\n#&gt; $bedrooms\n#&gt; $bedrooms$type\n#&gt; [1] \"integer\"\n#&gt; \n#&gt; $bedrooms$example\n#&gt; NULL\n#&gt; \n#&gt; $bedrooms$details\n#&gt; list()\n#&gt; \n#&gt; \n#&gt; $bathrooms\n#&gt; $bathrooms$type\n#&gt; [1] \"numeric\"\n#&gt; \n#&gt; $bathrooms$example\n#&gt; NULL\n#&gt; \n#&gt; $bathrooms$details\n#&gt; list()\n#&gt; \n#&gt; \n#&gt; $sqft_living\n#&gt; $sqft_living$type\n#&gt; [1] \"integer\"\n#&gt; \n#&gt; $sqft_living$example\n#&gt; NULL\n#&gt; \n#&gt; $sqft_living$details\n#&gt; list()\n#&gt; \n#&gt; \n#&gt; $yr_built\n#&gt; $yr_built$type\n#&gt; [1] \"integer\"\n#&gt; \n#&gt; $yr_built$example\n#&gt; NULL\n#&gt; \n#&gt; $yr_built$details\n#&gt; list()\n\n\n\n\nimport requests\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/prototype\" \nprint(requests.get(url).content)\n#&gt; b'{\"properties\":{\"bedrooms\":{\"example\":5.0,\"type\":\"number\"},\"bathrooms\":{\"example\":1.75,\"type\":\"number\"},\"sqft_living\":{\"example\":2110.0,\"type\":\"number\"},\"yr_built\":{\"example\":1962.0,\"type\":\"number\"}},\"required\":[\"bedrooms\",\"bathrooms\",\"sqft_living\",\"yr_built\"],\"title\":\"prototype\",\"type\":\"object\"}'"
  },
  {
    "objectID": "slides/02-deploy.html#model-input-prototype-3",
    "href": "slides/02-deploy.html#model-input-prototype-3",
    "title": "2 - Deploy your model",
    "section": "Model input prototype",
    "text": "Model input prototype\n\nIn Python, you supply the model‚Äôs input prototype via prototype_data\nIn R, the model input prototype is found automatically in most cases, but you can override this default via save_prototype\nIn both cases, it is ultimately up to you to decide what your API‚Äôs inputs should be!\nThe vetiver framework has sensible defaults but is extensible for more complex use cases"
  },
  {
    "objectID": "slides/02-deploy.html#your-turn-6",
    "href": "slides/02-deploy.html#your-turn-6",
    "title": "2 - Deploy your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nLet‚Äôs say you need to customize your model API‚Äôs inputs for a more complex use case.\nMake a new vetiver model object and change the input data prototype.\nRun an API locally for your new vetiver model object and explore the visual documentation. (Note that making predictions will not work now, since we haven‚Äôt updated the API behavior to match these inputs.)\nDiscuss a possible situation you might use this with your neighbor.\n\n\n\n\n\n\n‚àí+\n07:00\n\n\n\n\n\n\nhttps://posit-conf-2024.github.io/vetiver"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Intro to MLOps with vetiver",
    "section": "",
    "text": "These are the materials for a one-day workshop on MLOps with vetiver on Monday, 12 Aug at posit::conf 2024!\nMany data scientists understand what goes into training a machine learning or statistical model, but creating a strategy to deploy and maintain that model can be daunting. In this workshop, learn what MLOps (machine learning operations) is, what principles can be used to create a practical MLOps strategy, and what kinds of tasks and components are involved. We‚Äôll use vetiver, a framework for MLOps tasks in Python and R, to version, deploy, and monitor the models you have trained and want to deploy and maintain in production reliably and efficiently."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Intro to MLOps with vetiver",
    "section": "",
    "text": "These are the materials for a one-day workshop on MLOps with vetiver on Monday, 12 Aug at posit::conf 2024!\nMany data scientists understand what goes into training a machine learning or statistical model, but creating a strategy to deploy and maintain that model can be daunting. In this workshop, learn what MLOps (machine learning operations) is, what principles can be used to create a practical MLOps strategy, and what kinds of tasks and components are involved. We‚Äôll use vetiver, a framework for MLOps tasks in Python and R, to version, deploy, and monitor the models you have trained and want to deploy and maintain in production reliably and efficiently."
  },
  {
    "objectID": "index.html#is-this-workshop-for-me",
    "href": "index.html#is-this-workshop-for-me",
    "title": "Intro to MLOps with vetiver",
    "section": "Is this workshop for me?",
    "text": "Is this workshop for me?\nWe expect participants to have exposure to basic modeling and machine learning practice, but NOT expert familiarity with advanced ML or MLOps topics. This workshop is for you if you:\n\nhave intermediate R or Python knowledge (this will be a ‚Äúchoose your own adventure‚Äù workshop where you can work through the exercises in either R or Python)\ncan read data from CSV and other flat files, transform and reshape data, and make a wide variety of graphs\ncan fit a model to data with your modeling framework of choice"
  },
  {
    "objectID": "index.html#preparation",
    "href": "index.html#preparation",
    "title": "Intro to MLOps with vetiver",
    "section": "Preparation",
    "text": "Preparation\nWe will provide an environment with Posit Workbench and Posit Connect available, but you also have the option to work locally on your laptop rather than on Posit Workbench. If this is your preference, please come to the workshop with your laptop already set up.\n\nClone the repo so you have the files and data locally\nTo use R: Install recent versions of R and RStudio, along with the packages outlined in our DESCRIPTION file\nTo use Python: Install Python 3.10 and your preferred IDE, along with the packages outlined in our requirements.txt.\nOptionally, install Docker Desktop\n\nJoin us on GitHub Discussions to ask questions and share ideas."
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Intro to MLOps with vetiver",
    "section": "Schedule",
    "text": "Schedule\nQuarto files for working along are available on GitHub.\n\n\n\nTime\nActivity\n\n\n\n\n09:00 - 10:30\nIntroduction\n\n\n10:30 - 11:00\nCoffee break\n\n\n11:00 - 12:30\nDeploy your model\n\n\n12:30 - 13:30\nLunch break\n\n\n13:30 - 15:00\nDeeper into deployment\n\n\n15:00 - 15:30\nCoffee break\n\n\n15:30 - 17:00\nMonitor your model"
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Intro to MLOps with vetiver",
    "section": "Instructors",
    "text": "Instructors\nIsabel Zimmerman is a software engineer on the open source team at Posit PBC, where she works on building MLOps frameworks. When she‚Äôs not geeking out over new data science techniques, she can be found hanging out with her dog or watching Marvel movies.\nJulia Silge is an engineering manager at Posit PBC focusing on open source MLOps tools, as well as an author and international keynote speaker. Julia loves making beautiful charts, Jane Austen, and her two cats."
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "Intro to MLOps with vetiver",
    "section": "Acknowledgments",
    "text": "Acknowledgments\n\nThis website, including the slides, is made with Quarto. Please submit an issue on the GitHub repo for this workshop if you find something that could be fixed or improved."
  },
  {
    "objectID": "index.html#reuse-and-licensing",
    "href": "index.html#reuse-and-licensing",
    "title": "Intro to MLOps with vetiver",
    "section": "Reuse and licensing",
    "text": "Reuse and licensing\n\n This work is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "slides/04-monitor.html#plan-for-this-workshop",
    "href": "slides/04-monitor.html#plan-for-this-workshop",
    "title": "4 - Monitor your model",
    "section": "Plan for this workshop",
    "text": "Plan for this workshop\n\n\nVersioning\n\nManaging change in models ‚úÖ\n\nDeploying\n\nPutting models in REST APIs üéØ\n\nMonitoring\n\nTracking model performance üëÄ"
  },
  {
    "objectID": "slides/04-monitor.html#data-for-model-development",
    "href": "slides/04-monitor.html#data-for-model-development",
    "title": "4 - Monitor your model",
    "section": "Data for model development",
    "text": "Data for model development\nData that you use while building a model for training/testing\nR\n\nlibrary(arrow)\npath &lt;- here::here(\"data\", \"housing.parquet\")\nhousing &lt;- read_parquet(path)\n\nPython\n\nimport pandas as pd\n\nhousing = pd.read_parquet(\"../data/housing.parquet\")"
  },
  {
    "objectID": "slides/04-monitor.html#data-for-model-monitoring",
    "href": "slides/04-monitor.html#data-for-model-monitoring",
    "title": "4 - Monitor your model",
    "section": "Data for model monitoring",
    "text": "Data for model monitoring\nNew data that you predict on after your model deployed\nR\n\nlibrary(arrow)\npath &lt;- here::here(\"data\", \"housing_monitoring.parquet\")\nhousing_new &lt;- read_parquet(path)\n\nPython\n\nimport pandas as pd\nhousing_new = pd.read_parquet('../data/housing_monitoring.parquet')"
  },
  {
    "objectID": "slides/04-monitor.html#data-for-model-monitoring-1",
    "href": "slides/04-monitor.html#data-for-model-monitoring-1",
    "title": "4 - Monitor your model",
    "section": "Data for model monitoring",
    "text": "Data for model monitoring"
  },
  {
    "objectID": "slides/04-monitor.html#my-model-is-performing-well",
    "href": "slides/04-monitor.html#my-model-is-performing-well",
    "title": "4 - Monitor your model",
    "section": "My model is performing well!",
    "text": "My model is performing well!\n\nüë©üèº‚Äçüîß My model returns predictions quickly, doesn‚Äôt use too much memory or processing power, and doesn‚Äôt have outages.\n\n\n\n\n\nMetrics\n\n\n\n\nlatency\nmemory and CPU usage\nuptime"
  },
  {
    "objectID": "slides/04-monitor.html#my-model-is-performing-well-1",
    "href": "slides/04-monitor.html#my-model-is-performing-well-1",
    "title": "4 - Monitor your model",
    "section": "My model is performing well!",
    "text": "My model is performing well!\n\nüë©üèΩ‚Äçüî¨ My model returns predictions that are close to the true values for the predicted quantity.\n\n\n\n\n\nMetrics\n\n\n\n\naccuracy\nROC AUC\nF1 score\nRMSE\nlog loss"
  },
  {
    "objectID": "slides/04-monitor.html#model-drift",
    "href": "slides/04-monitor.html#model-drift",
    "title": "4 - Monitor your model",
    "section": "Model drift üìâ",
    "text": "Model drift üìâ\n\n\nDATA drift"
  },
  {
    "objectID": "slides/04-monitor.html#model-drift-1",
    "href": "slides/04-monitor.html#model-drift-1",
    "title": "4 - Monitor your model",
    "section": "Model drift üìâ",
    "text": "Model drift üìâ\n\n\nCONCEPT drift"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn",
    "href": "slides/04-monitor.html#your-turn",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nUsing our data, what could be an example of data drift? Concept drift?\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-inputs-1",
    "href": "slides/04-monitor.html#monitor-your-models-inputs-1",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs inputs",
    "text": "Monitor your model‚Äôs inputs\nTypically it is most useful to compare to your model development data1\n\nStatistical distribution of features individually\nStatistical characteristics of features as a whole\nApplicability scores: https://applicable.tidymodels.org/\n\nRemember you can store metrics of any kind from model development as metadata!"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-inputs-2",
    "href": "slides/04-monitor.html#monitor-your-models-inputs-2",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs inputs",
    "text": "Monitor your model‚Äôs inputs"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-inputs-3",
    "href": "slides/04-monitor.html#monitor-your-models-inputs-3",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs inputs",
    "text": "Monitor your model‚Äôs inputs"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-1",
    "href": "slides/04-monitor.html#your-turn-1",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a plot or table comparing the development vs.¬†monitoring distributions of a model input/feature.\nHow might you make this comparison if you didn‚Äôt have all the model development data available when monitoring?\nWhat summary statistics might you record during model development, to prepare for monitoring?\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-outputs-1",
    "href": "slides/04-monitor.html#monitor-your-models-outputs-1",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs outputs",
    "text": "Monitor your model‚Äôs outputs\n\nIf a realtor used a model like this one before putting a house on the market, they would get:\n\nA predicted price from their model\nA real price result after the home was sold\n\nIn this case, we can monitor our model‚Äôs statistical performance\n\nIf you don‚Äôt ever get a ‚Äúreal‚Äù result, you can still monitor the distribution of your outputs\n\n\n\nRead about real problems that have arisen in building predictive pricing models for real estate."
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-outputs-2",
    "href": "slides/04-monitor.html#monitor-your-models-outputs-2",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs outputs",
    "text": "Monitor your model‚Äôs outputs\nPython\n\nfrom vetiver import vetiver_endpoint, predict, compute_metrics, plot_metrics\nfrom sklearn.metrics import root_mean_squared_error, r2_score, mean_absolute_error\nfrom datetime import timedelta\nimport numpy as np\n\nurl = \"https://pub.demo.posit.team/public/seattle-housing-python/predict\"\nendpoint = vetiver_endpoint(url)\nhousing_new[\"pred\"] = predict(endpoint = url, \n    data = housing_new[[\"bedrooms\", \"bathrooms\", \"sqft_living\", \"yr_built\"]])\nhousing_new[\"price\"] = np.log10(housing_new[\"price\"])\n\ntd = timedelta(weeks = 2)\nmetric_set = [root_mean_squared_error, r2_score, mean_absolute_error]\n\nm = compute_metrics(\n    data = housing_new,\n    date_var = \"date\", \n    period = td,\n    metric_set = metric_set,\n    truth = \"price\",\n    estimate = \"pred\")\n\nmetrics_plot = plot_metrics(m).update_yaxes(matches = None)"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-outputs-3",
    "href": "slides/04-monitor.html#monitor-your-models-outputs-3",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs outputs",
    "text": "Monitor your model‚Äôs outputs"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-outputs-4",
    "href": "slides/04-monitor.html#monitor-your-models-outputs-4",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs outputs",
    "text": "Monitor your model‚Äôs outputs\nR\n\nlibrary(vetiver)\nlibrary(tidymodels)\nurl &lt;- \"https://pub.demo.posit.team/public/seattle-housing-rstats/predict\"\nendpoint &lt;- vetiver_endpoint(url)\n\naugment(endpoint, new_data = housing_new) |&gt;\n    mutate(price = log10(price)) |&gt;\n    vetiver_compute_metrics(\n        date,\n        \"week\",\n        price,\n        .pred,\n        metric_set = metric_set(rmse, rsq, mae)\n    ) |&gt;\n    vetiver_plot_metrics()"
  },
  {
    "objectID": "slides/04-monitor.html#monitor-your-models-outputs-4-output",
    "href": "slides/04-monitor.html#monitor-your-models-outputs-4-output",
    "title": "4 - Monitor your model",
    "section": "Monitor your model‚Äôs outputs",
    "text": "Monitor your model‚Äôs outputs"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-2",
    "href": "slides/04-monitor.html#your-turn-2",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nUse the functions for metrics monitoring from vetiver to create a monitoring visualization.\nChoose a different set of metrics or time aggregation.\nNote that there are functions for using pins as a way to version and update monitoring results too!\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/04-monitor.html#feedback-loops-1",
    "href": "slides/04-monitor.html#feedback-loops-1",
    "title": "4 - Monitor your model",
    "section": "Feedback loops üîÅ",
    "text": "Feedback loops üîÅ\n\nUsers take some action as a result of a prediction\nUsers rate or correct the quality of a prediction\nProduce annotations (crowdsource or expert)\nProduce feedback automatically\n\n\nBuilding Machine Learning Pipelines by Hapke & Nelson"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-3",
    "href": "slides/04-monitor.html#your-turn-3",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nWhat is a possible feedback loop for the Seattle housing data?\nDo you think your example would be harmful or helpful? To whom?\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/04-monitor.html#ml-metrics-organizational-outcomes",
    "href": "slides/04-monitor.html#ml-metrics-organizational-outcomes",
    "title": "4 - Monitor your model",
    "section": "ML metrics ‚û°Ô∏è organizational outcomes",
    "text": "ML metrics ‚û°Ô∏è organizational outcomes\n\nAre machine learning metrics like F1 score or RMSE what matter to your organization?\nConsider how ML metrics are related to important outcomes or KPIs for your business or org\nThere isn‚Äôt always a 1-to-1 mapping üòî\nYou can partner with stakeholders to monitor what‚Äôs truly important about your model"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-4",
    "href": "slides/04-monitor.html#your-turn-4",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nLet‚Äôs say that the most important organizational outcome for a Seattle realtor is how accurate a pricing model is in terms of percentage on prices in USD rather than an absolute value. (Think about being 20% wrong vs.¬†$20,000 wrong.)\nWe can measure this with the mean absolute percentage error.\nCompute this quantity with the monitoring data, and aggregate by week/month, number of bedrooms/bathrooms, or waterfront status.\nFor extra credit, make a visualization showing your results.\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/04-monitor.html#ml-metrics-organizational-outcomes-1",
    "href": "slides/04-monitor.html#ml-metrics-organizational-outcomes-1",
    "title": "4 - Monitor your model",
    "section": "ML metrics ‚û°Ô∏è organizational outcomes",
    "text": "ML metrics ‚û°Ô∏è organizational outcomes\n\nRPython\n\n\n\naugment(endpoint, housing_new) |&gt; \n    mutate(.pred = 10 ^ .pred) |&gt; \n    group_by(waterfront) |&gt; \n    mape(price, .pred)\n#&gt; # A tibble: 2 √ó 4\n#&gt;   waterfront .metric .estimator .estimate\n#&gt;   &lt;lgl&gt;      &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n#&gt; 1 FALSE      mape    standard        29.5\n#&gt; 2 TRUE       mape    standard        52.0\n\n\n\n\nfrom sklearn.metrics import mean_absolute_percentage_error\n\nhousing_new \\\n    .groupby(\"waterfront\") \\\n    .apply(lambda x: mean_absolute_percentage_error(\n        y_pred= 10 ** x[\"pred\"], y_true= 10 ** x[\"price\"]), include_groups=False)\n#&gt; waterfront\n#&gt; False    0.304799\n#&gt; True     0.531649\n#&gt; dtype: float64"
  },
  {
    "objectID": "slides/04-monitor.html#possible-model-monitoring-artifacts",
    "href": "slides/04-monitor.html#possible-model-monitoring-artifacts",
    "title": "4 - Monitor your model",
    "section": "Possible model monitoring artifacts",
    "text": "Possible model monitoring artifacts\n\nAdhoc analysis that you post in Slack\nReport that you share in Google Drive\nFully automated dashboard published to Posit Connect\n\n\n5 Levels of MLOps Maturity"
  },
  {
    "objectID": "slides/04-monitor.html#possible-model-monitoring-artifacts-1",
    "href": "slides/04-monitor.html#possible-model-monitoring-artifacts-1",
    "title": "4 - Monitor your model",
    "section": "Possible model monitoring artifacts",
    "text": "Possible model monitoring artifacts"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-5",
    "href": "slides/04-monitor.html#your-turn-5",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a Quarto report or R Markdown dashboard for model monitoring.\nPublish your document to Connect.\n\n\n\n\n\n\n‚àí+\n15:00"
  },
  {
    "objectID": "slides/04-monitor.html#section-1",
    "href": "slides/04-monitor.html#section-1",
    "title": "4 - Monitor your model",
    "section": "",
    "text": "We made it! üéâ"
  },
  {
    "objectID": "slides/04-monitor.html#your-turn-6",
    "href": "slides/04-monitor.html#your-turn-6",
    "title": "4 - Monitor your model",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nWhat is one thing you learned that surprised you?\nWhat is one thing you learned that you plan to use?\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/04-monitor.html#resources-to-keep-learning",
    "href": "slides/04-monitor.html#resources-to-keep-learning",
    "title": "4 - Monitor your model",
    "section": "Resources to keep learning",
    "text": "Resources to keep learning\n\nDocumentation at https://vetiver.posit.co/\nIsabel‚Äôs talk from rstudio::conf() 2022 on Demystifying MLOps\nEnd-to-end demos from Posit Solution Engineering in R and Python\nAre you on the right track with your MLOps system? Use the rubric in ‚ÄúThe ML Test Score: A Rubric for ML Production Readiness and Technical Debt Reduction‚Äù by Breck et al (2017)\nWant to learn about how MLOps is being practiced? Read one of our favorite üòç recent papers, ‚ÄúOperationalizing Machine Learning: An Interview Study‚Äù by Shankar et al (2022)\n\n\nFollow Posit and/or us on your preferred social media for updates!"
  },
  {
    "objectID": "slides/03-deploy.html#plan-for-this-workshop",
    "href": "slides/03-deploy.html#plan-for-this-workshop",
    "title": "3 - Deeper into deployment",
    "section": "Plan for this workshop",
    "text": "Plan for this workshop\n\n\nVersioning\n\nManaging change in models ‚úÖ\n\nDeploying\n\nPutting models in REST APIs üéØ\n\nMonitoring\n\nTracking model performance üëÄ"
  },
  {
    "objectID": "slides/03-deploy.html#why-docker",
    "href": "slides/03-deploy.html#why-docker",
    "title": "3 - Deeper into deployment",
    "section": "Why Docker?",
    "text": "Why Docker?\n\n\nOpen source\nReproducible\nBring your own container philosophy\n\n\n\nECR in AWS, etc huggingface"
  },
  {
    "objectID": "slides/03-deploy.html#why-docker-1",
    "href": "slides/03-deploy.html#why-docker-1",
    "title": "3 - Deeper into deployment",
    "section": "Why Docker?",
    "text": "Why Docker?"
  },
  {
    "objectID": "slides/03-deploy.html#create-docker-artifacts",
    "href": "slides/03-deploy.html#create-docker-artifacts",
    "title": "3 - Deeper into deployment",
    "section": "Create Docker artifacts",
    "text": "Create Docker artifacts\nStart with a trained and versioned model\n\n\n\nDockerfile\nModel dependencies, typically requirements.txt or renv.lock\nFile to serve API, typically app.py or plumber.R"
  },
  {
    "objectID": "slides/03-deploy.html#create-docker-artifacts-1",
    "href": "slides/03-deploy.html#create-docker-artifacts-1",
    "title": "3 - Deeper into deployment",
    "section": "Create Docker artifacts",
    "text": "Create Docker artifacts\nStart with a trained and versioned model\nPython\n\nvetiver.prepare_docker(\n    board, \n    \"isabel.zimmerman/seattle-housing-python\"\n    port = 8080\n)\n\nR\n\nvetiver_prepare_docker(\n    board, \n    \"julia.silge/seattle-housing-rstats\", \n    docker_args = list(port = 8080)\n)"
  },
  {
    "objectID": "slides/03-deploy.html#dockerfiles-for-vetiver",
    "href": "slides/03-deploy.html#dockerfiles-for-vetiver",
    "title": "3 - Deeper into deployment",
    "section": "Dockerfiles for vetiver",
    "text": "Dockerfiles for vetiver\nPython\n# # Generated by the vetiver package; edit with care\n# start with python base image\nFROM python:3.11\n\n# create directory in container for vetiver files\nWORKDIR /vetiver\n\n# copy and install requirements\nCOPY vetiver_requirements.txt /vetiver/requirements.txt\n\n#\nRUN pip install --no-cache-dir --upgrade -r /vetiver/requirements.txt\n\n# copy app file\nCOPY app.py /vetiver/app/app.py\n\n# expose port\nEXPOSE 8080\n\n# run vetiver API\nCMD [\"uvicorn\", \"app.app:api\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]"
  },
  {
    "objectID": "slides/03-deploy.html#dockerfiles-for-vetiver-1",
    "href": "slides/03-deploy.html#dockerfiles-for-vetiver-1",
    "title": "3 - Deeper into deployment",
    "section": "Dockerfiles for vetiver",
    "text": "Dockerfiles for vetiver\nR\n# Generated by the vetiver package; edit with care\n\nFROM rocker/r-ver:4.4.0\nENV RENV_CONFIG_REPOS_OVERRIDE https://packagemanager.rstudio.com/cran/latest\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends \\\n  libcurl4-openssl-dev \\\n  libicu-dev \\\n  libsodium-dev \\\n  libssl-dev \\\n  make \\\n  zlib1g-dev \\\n  && apt-get clean\n\nCOPY vetiver_renv.lock renv.lock\nRUN Rscript -e \"install.packages('renv')\"\nRUN Rscript -e \"renv::restore()\"\nCOPY plumber.R /opt/ml/plumber.R\nEXPOSE 8080\nENTRYPOINT [\"R\", \"-e\", \"pr &lt;- plumber::plumb('/opt/ml/plumber.R'); pr$run(host = '0.0.0.0', port = 8080)\"]"
  },
  {
    "objectID": "slides/03-deploy.html#build-your-container",
    "href": "slides/03-deploy.html#build-your-container",
    "title": "3 - Deeper into deployment",
    "section": "Build your container",
    "text": "Build your container\ndocker build -t housing ."
  },
  {
    "objectID": "slides/03-deploy.html#run-your-container",
    "href": "slides/03-deploy.html#run-your-container",
    "title": "3 - Deeper into deployment",
    "section": "Run your container",
    "text": "Run your container\ndocker run -p 8080:8080 housing"
  },
  {
    "objectID": "slides/03-deploy.html#run-your-container-1",
    "href": "slides/03-deploy.html#run-your-container-1",
    "title": "3 - Deeper into deployment",
    "section": "Run your container",
    "text": "Run your container\ndocker run --env-file .env -p 8080:8080 housing\n\nprobably .Renv if you are in R"
  },
  {
    "objectID": "slides/03-deploy.html#make-predictions",
    "href": "slides/03-deploy.html#make-predictions",
    "title": "3 - Deeper into deployment",
    "section": "Make predictions",
    "text": "Make predictions\nR\n\nendpoint &lt;- vetiver_endpoint(\"http://0.0.0.0:8080/predict\")\npredict(endpoint, X_test)\n\nPython\n\nendpoint = vetiver.vetiver_endpoint(\"http://0.0.0.0:8080/predict\")\nvetiver.predict(endpoint=endpoint, data=X_test)"
  },
  {
    "objectID": "slides/03-deploy.html#docker-resources",
    "href": "slides/03-deploy.html#docker-resources",
    "title": "3 - Deeper into deployment",
    "section": "Docker resources",
    "text": "Docker resources\n\nEnough Docker to be Dangerous\nPython Docker\nTen simple rules for writing Dockerfiles for reproducible data science\nDocker info from Posit Solutions Engineering"
  },
  {
    "objectID": "slides/03-deploy.html#model-metrics-as-metadata-1",
    "href": "slides/03-deploy.html#model-metrics-as-metadata-1",
    "title": "3 - Deeper into deployment",
    "section": "Model metrics as metadata",
    "text": "Model metrics as metadata\n\nPythonR\n\n\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn import model_selection, ensemble\n\nhousing = pd.read_parquet('../data/housing.parquet')\n\nnp.random.seed(123)\nX, y = housing[[\"bedrooms\", \"bathrooms\", \"sqft_living\", \"yr_built\"]], np.log10(housing[\"price\"])\nX_train, X_test, y_train, y_test = model_selection.train_test_split(\n    X, y,\n    test_size = 0.2\n)\n\nhousing_fit = ensemble.RandomForestRegressor(n_estimators=200).fit(X_train, y_train)\n\n\n\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(arrow)\npath &lt;- here::here(\"data\", \"housing.parquet\")\nhousing &lt;- read_parquet(path)\n\nset.seed(123)\nhousing_split &lt;- housing |&gt;\n    mutate(price = log10(price)) |&gt;\n    initial_split(prop = 0.8)\nhousing_train &lt;- training(housing_split)\nhousing_test &lt;- testing(housing_split)\n\nhousing_fit &lt;-\n    workflow(\n        price ~ bedrooms + bathrooms + sqft_living + yr_built,\n        rand_forest(trees = 200, mode = \"regression\")\n    ) |&gt;\n    fit(data = housing_train)"
  },
  {
    "objectID": "slides/03-deploy.html#model-metrics-as-metadata-2",
    "href": "slides/03-deploy.html#model-metrics-as-metadata-2",
    "title": "3 - Deeper into deployment",
    "section": "Model metrics as metadata",
    "text": "Model metrics as metadata\n\nPythonR\n\n\n\nfrom sklearn import metrics\n\nmetric_set = [metrics.root_mean_squared_error, metrics.r2_score, metrics.mean_absolute_error]\ny_predictions = pd.Series(housing_fit.predict(X_test))\n\nhousing_metrics = pd.DataFrame()\n\nfor metric in metric_set:\n    metric_name = str(metric.__name__)\n    metric_output = metric(y_test, y_predictions)\n    housing_metrics = pd.concat(\n        (\n            housing_metrics,\n            pd.DataFrame({\"name\": [metric_name], \"score\": [metric_output]}),\n        ),\n        axis=0,\n    )\n\nhousing_metrics.reset_index(inplace=True, drop=True)\nhousing_metrics\n#&gt;                       name     score\n#&gt; 0  root_mean_squared_error  0.155040\n#&gt; 1                 r2_score  0.534481\n#&gt; 2      mean_absolute_error  0.121908\n\n\n\n\nhousing_metrics &lt;-\n    augment(housing_fit, new_data = housing_test) |&gt;\n    metrics(truth = price, estimate = .pred)\n\nhousing_metrics\n#&gt; # A tibble: 3 √ó 3\n#&gt;   .metric .estimator .estimate\n#&gt;   &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n#&gt; 1 rmse    standard       0.152\n#&gt; 2 rsq     standard       0.555\n#&gt; 3 mae     standard       0.119"
  },
  {
    "objectID": "slides/03-deploy.html#model-metrics-as-metadata-3",
    "href": "slides/03-deploy.html#model-metrics-as-metadata-3",
    "title": "3 - Deeper into deployment",
    "section": "Model metrics as metadata",
    "text": "Model metrics as metadata\n\nPythonR\n\n\n\nfrom vetiver import VetiverModel\nv = VetiverModel(\n    housing_fit, \n    \"seattle-housing-python\", \n    prototype_data = X_train,\n    metadata = housing_metrics.to_dict()\n)\nv.description\n#&gt; 'A scikit-learn RandomForestRegressor model'\n\n\n\n\nlibrary(vetiver)\nv &lt;- vetiver_model(\n    housing_fit, \n    \"seattle-housing-rstats\",\n    metadata = list(metrics = housing_metrics)\n)\nv\n#&gt; \n#&gt; ‚îÄ‚îÄ seattle-housing-rstats ‚îÄ &lt;bundled_workflow&gt; model for deployment \n#&gt; A ranger regression modeling workflow using 4 features"
  },
  {
    "objectID": "slides/03-deploy.html#model-metrics-as-metadata-4",
    "href": "slides/03-deploy.html#model-metrics-as-metadata-4",
    "title": "3 - Deeper into deployment",
    "section": "Model metrics as metadata",
    "text": "Model metrics as metadata\n\nWe pin our vetiver model to a board to version it\nThe metadata, including our metrics, are versioned along with the model\n\n\n\nPythonR\n\n\n\nfrom pins import board_connect\nfrom vetiver import vetiver_pin_write\nfrom dotenv import load_dotenv\nload_dotenv()\n\nboard = board_connect(allow_pickle_read = True)\nvetiver_pin_write(board, v)\n\n\n\n\nlibrary(pins)\nboard &lt;- board_connect()\nboard |&gt; vetiver_pin_write(v)"
  },
  {
    "objectID": "slides/03-deploy.html#your-turn",
    "href": "slides/03-deploy.html#your-turn",
    "title": "3 - Deeper into deployment",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCompute metrics for your model using the testing data.\nStore these metrics as metadata in a vetiver model object.\nWrite this new vetiver model object as a new version of your pin.\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/03-deploy.html#model-metrics-as-metadata-5",
    "href": "slides/03-deploy.html#model-metrics-as-metadata-5",
    "title": "3 - Deeper into deployment",
    "section": "Model metrics as metadata",
    "text": "Model metrics as metadata\nHow do we extract our metrics out to use them?\n\nPythonR\n\n\n\nmetadata = board.pin_meta(\"seattle-housing-python\")\nextracted_metrics = pd.DataFrame(metadata.user.get(\"user\"))\nextracted_metrics\n#&gt;                       name     score\n#&gt; 0  root_mean_squared_error  0.155040\n#&gt; 1                 r2_score  0.534481\n#&gt; 2      mean_absolute_error  0.121908\n\n\n\n\nextracted_metrics &lt;- \n    board |&gt; \n    pin_meta(\"seattle-housing-rstats\") |&gt; \n    pluck(\"user\", \"metrics\") |&gt; \n    as_tibble()\n\nextracted_metrics\n#&gt; # A tibble: 3 √ó 3\n#&gt;   .metric .estimator .estimate\n#&gt;   &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n#&gt; 1 rmse    standard       0.152\n#&gt; 2 rsq     standard       0.555\n#&gt; 3 mae     standard       0.119"
  },
  {
    "objectID": "slides/03-deploy.html#your-turn-1",
    "href": "slides/03-deploy.html#your-turn-1",
    "title": "3 - Deeper into deployment",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nObtain the metrics metadata for your versioned model.\nOptional: Redeploy your model to your Connect server, then obtain the metrics metadata for your neighbor‚Äôs model by calling the /metadata endpoint for their API.\nWhat else might you want to store as model metadata?\nHow or when might you use model metadata?\n\n\n\n\n\n\n‚àí+\n07:00"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-1",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-1",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\n\nA lot of code is being generated throughout this deployment process\nYou have access to that code and can alter it yourself!\nThe vetiver framework has sensible defaults but is extensible for more complex use cases\nWhat really sets up your model API?"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-2",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-2",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nR\n\nvetiver_write_plumber(board, \"julia.silge/seattle-housing-rstats\")\n\n# Generated by the vetiver package; edit with care\n\nlibrary(pins)\nlibrary(plumber)\nlibrary(rapidoc)\nlibrary(vetiver)\n\n# Packages needed to generate model predictions\nif (FALSE) {\n    library(parsnip)\n    library(ranger)\n    library(workflows)\n}\nb &lt;- board_connect(auth = \"envvar\")\nv &lt;- vetiver_pin_read(b, \"julia.silge/seattle-housing-rstats\", version = \"117005\")\n\n#* @plumber\nfunction(pr) {\n    pr %&gt;% vetiver_api(v)\n}"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-3",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-3",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nPython\n\nvetiver.write_app(board, \"isabel.zimmerman/seattle-housing-python\")\n\nfrom vetiver import VetiverModel\nimport vetiver\nimport pins\n\n\nb = pins.board_connect(allow_pickle_read=True)\nv = VetiverModel.from_pin(b, 'isabel.zimmerman/seattle-housing-python', version = '78841')\n\nvetiver_api = vetiver.VetiverAPI(v)\napi = vetiver_api.app"
  },
  {
    "objectID": "slides/03-deploy.html#your-turn-2",
    "href": "slides/03-deploy.html#your-turn-2",
    "title": "3 - Deeper into deployment",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nCreate a Plumber or FastAPI app file to serve your model‚Äôs predictions.\nRun this app locally and check out the visual documentation again.\n\n\n\n\n\n\n‚àí+\n05:00"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-4",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-4",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\n\nIn Python, you add more endpoints to your FastAPI app file\nIn R, you add more endpoints in your Plumber app file\nIn both cases, it is ultimately up to you to decide what your API‚Äôs endpoints should be!"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-5",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-5",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nR\n# Generated by the vetiver package; edit with care\n\nlibrary(pins)\nlibrary(plumber)\nlibrary(rapidoc)\nlibrary(vetiver)\n\n# Packages needed to generate model predictions\nif (FALSE) {\n    library(parsnip)\n    library(ranger)\n    library(workflows)\n}\nb &lt;- board_connect(auth = \"envvar\")\nv &lt;- vetiver_pin_read(b, \"julia.silge/seattle-housing-rstats\", version = \"117005\")\n\n#* @plumber\nfunction(pr) {\n    pr %&gt;% vetiver_api(v)\n}"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-6",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-6",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nR\n# Generated by the vetiver package; edit with care\n\nlibrary(pins)\nlibrary(plumber)\nlibrary(rapidoc)\nlibrary(vetiver)\nlibrary(DALEXtra)\nlibrary(dplyr)\n\n# Packages needed to generate model predictions\nif (FALSE) {\n    library(parsnip)\n    library(ranger)\n    library(workflows)\n}\nb &lt;- board_connect(auth = \"envvar\")\nv &lt;- vetiver_pin_read(b, \"julia.silge/seattle-housing-rstats\", version = \"117005\")\nexplainer &lt;- pin_read(b, \"julia.silge/seattle-shap-rstats\")\n\nhandler_explain &lt;- function(req) {\n    new_data &lt;- req$body\n    new_data &lt;- vetiver_type_convert(new_data, v$prototype)\n    shap &lt;- predict_parts(explainer, new_data, type = \"shap\", B = 25)\n    shap |&gt; group_by(variable) |&gt; summarise(contribution = mean(contribution))\n}\n\n#* @plumber\nfunction(pr) {\n    pr |&gt;\n        vetiver_api(v) |&gt;\n        pr_post(path = \"/explain\", handler = handler_explain)\n}"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-7",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-7",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nPython\nfrom vetiver import VetiverModel\nimport vetiver\nimport pins\n\n\nb = pins.board_connect(allow_pickle_read=True)\nv = VetiverModel.from_pin(b, 'isabel.zimmerman/seattle-housing-python', version = '78841')\n\nvetiver_api = vetiver.VetiverAPI(v)\napi = vetiver_api.app"
  },
  {
    "objectID": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-8",
    "href": "slides/03-deploy.html#add-a-new-endpoint-to-your-api-8",
    "title": "3 - Deeper into deployment",
    "section": "Add a new endpoint to your API",
    "text": "Add a new endpoint to your API\nPython\nfrom vetiver import VetiverModel\nimport vetiver\nimport pins\nfrom dotenv import load_dotenv\nload_dotenv()\n\nb = pins.board_connect(allow_pickle_read=True)\nv = VetiverModel.from_pin(b, 'isabel.zimmerman/seattle-housing-python')\n\nconnect_url = \"https://pub.demo.posit.team/public\"\npin_path = {\"shap_python\": \"seattle-shap-python/\"}\nshap_board = pins.board_url(connect_url, pin_path, allow_pickle_read = True)\nexplainer = shap_board.pin_read(\"shap_python\")\n\ndef shap_explainer(data):\n    import pandas as pd\n    values_as_json = pd.DataFrame(explainer.shap_values(data)).to_json(orient='records')\n    return values_as_json\n\nvetiver_api = vetiver.VetiverAPI(v)\nvetiver_api.vetiver_post(shap_explainer, \"shap\")\napi = vetiver_api.app"
  },
  {
    "objectID": "slides/03-deploy.html#your-turn-3",
    "href": "slides/03-deploy.html#your-turn-3",
    "title": "3 - Deeper into deployment",
    "section": "Your turn üè∫",
    "text": "Your turn üè∫\n\n\n\nActivity\n\n\nAdd a new endpoint to the API app file you already made.\nRun the app locally and check out your new endpoint.\nHow might you want to use an additional endpoint?\n\n\n\n\n\n\n‚àí+\n07:00\n\n\n\n\n\n\nhttps://posit-conf-2024.github.io/vetiver"
  }
]